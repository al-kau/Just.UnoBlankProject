---

name: "Publish MacOS"

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  
jobs:

  publish-macos-packages:            
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          global-json-file: global.json

      - name: Setup the Uno Platform
        uses: finebits/github-actions/devhub/uno-platform/setup@4a126d80a11c5fdc83ce884d3d23dffb30bc4495 # v2.0.0

      - name: Switch Xcode
        run: sudo xcode-select -switch "/Applications/Xcode_16.2.app"

      - name: Import certificate
        run: |
          security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain

          echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign

          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
  
          xcrun notarytool store-credentials "NOTARY_TOOL_PROFILE" --apple-id "${{ secrets.APPLE_ID }}" --team-id ${{ secrets.TEAM_ID }} --password "${{ secrets.NOTARY_TOOL_PASSWORD }}"

      # - name: Publish maccatalyst app
      #   run: |
      #     mkdir -p "./publish/maccatalyst/app/"
      #     dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-maccatalyst --verbosity=normal --nologo -p:CreatePackage=false -p:CodesignKey=${{ secrets.DEVELOPER_ID_APPLICATION }} -p:CodeSigningKey=${{ secrets.DEVELOPER_ID_APPLICATION }} -p:EnableCodeSigning=true -p:UnoMacOSNotarizeKeychainProfile="NOTARY_TOOL_PROFILE" -p:EnableCodeSigning=true -o "publish/maccatalyst/app" -bl
      #     cp -r ./src/UnoBlankProject/UnoBlankProject/bin/Release/net9.0-maccatalyst/*.app  ./publish/maccatalyst/app

      # - name: Publish maccatalyst pkg
      #   run: |
      #     mkdir -p "./publish/maccatalyst/pkg1/"
      #     dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" -f net9.0-maccatalyst -c Release -p:MtouchLink=SdkOnly -p:CreatePackage=true -p:EnableCodeSigning=true -p:EnablePackageSigning=true -p:CodesignKey="${{ secrets.DEVELOPER_ID_APPLICATION }}" -p:CodesignProvision="Test App Mac Catalyst Distribution" -p:CodesignEntitlements="./src/UnoBlankProject/UnoBlankProject/Platforms/MacCatalyst/Entitlements.plist" -p:PackageSigningKey="${{ secrets.DEVELOPER_ID_APPLICATION }}" -p:UseHardenedRuntime=true
          

      # - name: Publish maccatalyst pkg
      #   run: |
      #     mkdir -p "./publish/maccatalyst/pkg/"
      #     dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-maccatalyst --verbosity=normal --nologo -p:CreatePackage=true -p:CodesignKey=${{ secrets.DEVELOPER_ID_APPLICATION }} -p:CodeSigningKey=${{ secrets.DEVELOPER_ID_APPLICATION }} -p:EnableCodeSigning=true -p:UnoMacOSNotarizeKeychainProfile="NOTARY_TOOL_PROFILE" -o "publish/maccatalyst/pkg" -bl

      - name: Prepare desktop publish
        run: |
          dotnet build "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --target:TargetFrameworks-Desktop --no-restore

      - name: Publish mac-desktop app
        run: |
          mkdir -p "./publish/desktop/x64/app"
          dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-desktop --runtime=osx-x64 --verbosity=normal --nologo -p:SelfContained=true -p:PackageFormat=app -p:CodesignKey="${{ secrets.DEVELOPER_ID_APPLICATION }}" -p:PublishSingleFile=true -p:UnoMacOSIncludeDebugSymbols=false -o "./publish/desktop/x64/app"

      - name: Notary
        run: |

          ls -alR ./publish/desktop/x64/app
        
          # zip bundle
          ditto -c -k --sequesterRsrc --keepParent "./publish/desktop/x64/app/UnoBlankProject.app" "./publish/desktop/x64/app/UnoBlankProject.app.zip"
          
          xcrun notarytool submit "./publish/desktop/x64/app/UnoBlankProject.app.zip" --wait --keychain-profile "NOTARY_TOOL_PROFILE"

          xcrun stapler staple "./publish/desktop/x64/app/UnoBlankProject.app"
          
 
      # - name: Publish mac-desktop bin
      #   run: |
      #     mkdir -p "./publish/desktop/x64/bin/"
      #     dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-desktop --runtime=osx-x64 --verbosity=normal --nologo -p:SelfContained=true -p:CodesignKey=${{ secrets.DEVELOPER_ID_APPLICATION }} -p:PublishSingleFile=true -o "publish/desktop/x64/bin"

      # - name: Publish mac-desktop dmg
      #  run: |
      #    mkdir -p "./publish/desktop/x64/dmg/"
      #    dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-desktop --runtime=osx-x64 --verbosity=normal --nologo -p:SelfContained=true -p:PackageFormat=dmg -p:PublishSingleFile=true -p:CopyOutputSymbolsToOutputDirectory=false -o "publish/desktop/x64/dmg" -bl

      # - name: Publish mac-desktop pkg
      #  run: |
      #    mkdir -p "./publish/desktop/x64/pkg/"
      #    dotnet publish "./src/UnoBlankProject/UnoBlankProject/UnoBlankProject.csproj" --configuration=Release --framework=net9.0-desktop --runtime=osx-x64 --verbosity=normal --nologo -p:SelfContained=true -p:PackageFormat=pkg -p:PublishSingleFile=true -p:CopyOutputSymbolsToOutputDirectory=false -o "publish/desktop/x64/pkg" -bl
    
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: macos-packages
          path: ./publish
