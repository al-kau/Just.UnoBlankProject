<Project>
  <Target Name="TargetFrameworks-Desktop">
    <Message Text="TargetFrameworks: net9.0-desktop" Importance="high" />
    <Message Text="MSBuildThisFileDirectory: $(MSBuildThisFileDirectory)" Importance="high" />

    <XmlPoke XmlInputPath="$(MSBuildThisFileDirectory)/UnoBlankProject/UnoBlankProject.csproj" Query="/Project/PropertyGroup/TargetFrameworks" Value="net9.0-desktop" />
    <XmlPoke XmlInputPath="$(MSBuildThisFileDirectory)/UnoBlankLibrary/UnoBlankLibrary.csproj" Query="/Project/PropertyGroup/TargetFrameworks" Value="net9.0%3Bnet9.0-desktop" />
  </Target>

  <!-- Unfortunately, command-line args -p:DebugType=None -p:DebugSymbols=false started working only for the main project,
	     PDBs from other projects are still included. Looks like this is the most reliable way to remove PDBs.
		   Source https://github.com/dotnet/sdk/issues/16975#issuecomment-1689291544 -->
	<Target Name="DeletePDBFiles" BeforeTargets="Publish" Condition="'$(UnoMacOSIncludeDebugSymbols)' == 'false' Or '$(ExcludePublishDebugSymbols)' == 'true' ">
        <Message Text="UnoMacOSIncludeDebugSymbols: $(UnoMacOSIncludeDebugSymbols)" Importance="high" />
        <Message Text="ExcludePublishDebugSymbols: $(ExcludePublishDebugSymbols)" Importance="high" />

        <ItemGroup>
            <FilesToDelete Include="$(PublishDir)**/*.pdb"/>
        </ItemGroup>
 
        <Delete Files="@(FilesToDelete)">
            <Output TaskParameter="DeletedFiles" ItemName="DeletedList"/>
	    </Delete>
		<Message Text="Deleted PDB files: @(DeletedList)" Importance="high" />
	</Target>

</Project>
